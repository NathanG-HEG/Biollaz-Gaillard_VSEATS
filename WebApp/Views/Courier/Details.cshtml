@model WebApp.Models.OrderViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerFistName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerFistName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerLastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerLastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DeliveryAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DeliveryAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AreaName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AreaName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderTotal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderTotal)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExpectedDeliveryTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExpectedDeliveryTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TimeOfDelivery)
        </dt>
        <dd class="col-sm-10">
            @{
                string time;
                if (Model.TimeOfDelivery != DateTime.MinValue)
                {
                    time = Model.TimeOfDelivery.ToString();
                }
                else
                {
                    time = "not yet";
                }
            }
            @time
        </dd>

    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
